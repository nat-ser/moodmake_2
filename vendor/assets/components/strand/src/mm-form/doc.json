{
	"name":"mm-form",
	"description":"A form component for creating visual layout, collecting and validating data from the individual fields placed within. ",
	"experimental" : [
		{ 
			"message" : "This component contains experimental features. The configuration and API are subject to change. Please use at your own risk." 
		}
	],
	"attributes": [
		{
			"name":"view",
			"type":"Object",
			"description":"A reference to the view in which the mm-form resides. The most common use case for the mm-form will be within a custom view web component, so a reference to the view will be advantageous, especially when creating custom validation methods.",
			"optional":true,
			"default":"none"
		},
		{
			"name":"unsaved",
			"type":"Boolean",
			"description":"Returns true if the mm-form contains values entered by the user - i.e. the current state of the data differs from the initial data provided to the mm-form.",
			"default":"false",
			"attribute":"N/A"
		},
		{
			"name":"showUnsavedMessage",
			"type":"Boolean",
			"description":"By default, mm-form will present messaging to the user in it's built-in mm-footer. The messaging will be presented if the mm-form contains values entered by the user - i.e. the current state of the data differs from the initial data provided to the mm-form. This can be disabled by setting the value of showUnsavedMessage to false.",
			"optional":true,
			"default":"true",
			"attribute":"show-unsaved-message"
		},
		{
			"name":"autoValidate",
			"type":"Boolean",
			"description":"By default, mm-form will present validation messaging (as provided in the configuration) to the user upon entering values into form fields. This can be disabled by setting the value of autoValidate to false.",
			"optional":true,
			"default":"true",
			"attribute":"auto-validate"
		},
		{
			"name":"footerMessages",
			"type":"Object",
			"description":"An object containing the desired text to be displayed in the mm-form's built-in mm-footer. By default, mm-form will present messaging to the user in it's built-in mm-footer, which can be configured here. The message types are as follows: 'error', 'warning', and 'success'.",
			"optional":true,
			"default":"{ 'error' : 'This form contains errors', 'success' : 'This form does not contain any errors', 'warning' : 'This form contains unsaved changes' }",
			"attribute":"footer-messages"
		},
		{
			"name":"actions",
			"type":"Array",
			"description":"An array of objects representing the actions to be displayed in the footer of the mm-form. Each object provided should follow the format { label: String, type: String, callback: Function }. The property 'label' sets the name of the action. The property 'type' ('primary', 'secondary', or 'action') sets the button type. The property 'callback' may take optional arguments for the event object and the mm-form node.",
			"optional":true,
			"default":"{ label: 'Cancel', type: 'action', callback: function(e,host) { host.cancel(); } }, { label: 'Save', type: 'primary', callback: function(e,host) { host.serializeForm(); } } ",
			"options":"*for property 'type': primary, secondary, action",
			"attribute":"N/A"
		},
		{
			"name":"showFooterMessages",
			"type":"Boolean",
			"description":"Instructs the mm-form to display footer messaging. This behavior can be disabled by setting the value of showFooterMessages to false.",
			"optional":true,
			"default":"true",
			"attribute":"show-footer-messages"
		},
		{
			"name":"footerFixed",
			"type":"Boolean",
			"description":"Instructs the mm-form to style it's built-in mm-footer as fixed position element. Typically, the mm-footer will float at the bottom of the screen, overlaying the form's contents, to denote the form is scrollable.",
			"optional":true,
			"default":"true",
			"attribute":"footer-fixed"
		},
		{
			"name":"footerLeft",
			"type":"Boolean",
			"description":"Instructs the mm-form to style it's built-in mm-footer's left position, in pixels, given that it is a fixed footer (see: footerFixed).",
			"optional":true,
			"default":"true",
			"attribute":"footer-left"
		},
		{
			"name":"config",
			"type":"Object",
			"description":"The configuration object provided to the mm-form. The configuration should contain a manifest of all the named fields marked up in the mm-form's light dom, as well as configuration for validation, error messaging and label for the field. If provided, an error message element and label element will be created for each form field. Validation configuration can be a custom method, or string for common cases ('empty', 'int', 'decimal', 'email', 'alpha', 'whitespace', 'checked', 'blank').",
			"optional":false,
			"default":"none",
			"attribute":"N/A"
		},
		{
			"name":"data",
			"type":"Object",
			"description":"Sets or returns a flat data object containing name/key and current value for each field in the mm-form. Can be provided to the mm-form if initial values are necessary, i.e. - editing a saved form.",
			"optional":false,
			"default":"none",
			"attribute":"N/A"
		}
	],
	"methods": [
		{
			"name":"validate",
			"description":"Instructs the mm-form to sweep through the form fields and perform the validation provided in the configuration."
		},

		{
			"name":"updateFieldErrors",
			"description":"In the event that an API could return error messaging different than that which was provided in the configuration, the error messaging can be updated by passing an object to this method.",
			"arguments":[
				{
					"name":"data",
					"type":"Object",
					"optional":false,
					"default":"none",
					"description":"A object containing the key for the field whose messaging is to be updated, and the corresponding message, for example { 'input' : 'Type a number greater than 0' }."
				}
			]
		},
		{
			"name":"resetFieldValidation",
			"description":"Instructs the mm-form to reset the visual validation state of a field based upon the key provided.",
			"arguements" : [
				{
					"name":"key",
					"type":"String",
					"optional":false,
					"default":"none",
					"description":"The name of the field which is to be reset to it's initial visual state."
				}
			]
		},
		{
			"name":"serializeForm",
			"description":"Instructs the mm-form to validate all fields and returns a flat data object containing the key value pairs for each named field. As a convenience, also fires a 'serialize-form' event which contains the form data, and information pertaining to validation (see: 'serialize-form' event for more information)."
		}
	],
	"events": [
		{
			"type": "serialize-form",
			"detail": [
				{
					"name":"valid",
					"type":"Boolean",
					"description":"Whether-or-not the form is valid."
				},
				{
					"name":"invalidFields",
					"type":"Array",
					"description":"An array containing the name of each invalid field."
				},
				{
					"name":"validFields",
					"type":"Array",
					"description":"An array containing the name of each valid field."
				},
				{
					"name":"data",
					"type":"Object",
					"description":"a flat data object containing name/key and current value for each field in the mm-form."
				}
			]
		},
		{
			"type": "cancel-form"
		}
	],
	"behaviors": [
		"lightdomgettable",
		"resolvable",
		"columnable",
		"refable"
	]
}
